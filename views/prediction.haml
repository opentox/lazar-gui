:javascript
  $(document).ready(function(){
    $('[data-toggle="popover"]').popover();
    $('.modal').on('hidden.bs.modal', function () {
      $(this).removeData('bs.modal');
    });
  });
%div.well
  %a.btn.btn-warning{:href => to('/predict')}
    %i.glyphicon.glyphicon-menu-left
    New Prediction
  / displays all prediction result in first table
  %h3 Prediction Results:
  %div.table-responsive
    %table.table.table-bordered{:id=>"overview", :style=>"background-color:white;"}
      %tbody
        %tr
          %td{:id=>"compound", :style=>"vertical-align:top;"}
            %p= @compound.svg
            %p= @compound.smiles
          - mw = @compound.molecular_weight
          - @model_types = {}
          - @dbhit = {}
          - @predictions.each_with_index do |prediction,i|
            - type = @models[i].model.class.to_s.match("Classification") ? "Classification" : "Regression"
            - @model_types[i] = type
            %td{:style=>"vertical-align:top;white-space:nowrap;"}
              %b{:class => "title"}
                = "#{@models[i].endpoint.gsub('_', ' ')} (#{@models[i].species})"
              %p
              - if prediction[:confidence] == "measured"
                - @dbhit[i] = true
                %p
                %b Measured activity:
                - p prediction[:value]
                - if prediction[:value].is_a?(Array)
                  = (type == "Regression") ? prediction[:value].collect{|v| weight = Compound.from_smiles(@compound.smiles).mmol_to_mg(v); '%.2e' % v + " (#{@models[i].unit})"+"|#{'%.2e' % weight} (mg/kg_bw/day)"}.join("</br>") : prediction[:value].join(", ")
                - else
                  = (type == "Regression") ? "#{"%.2e" % prediction[:value]} (#{@models[i].unit}) | #{'%.2e' % @compound.mmol_to_mg(prediction[:value])} (mg/kg_bw/day)" : prediction[:value]
                %p
                  %b Compound is part of the training dataset
              - elsif prediction[:neighbors].size > 0
                %p
                / model type (classification|regression)
                %b Type:
                = type
                %br
                %b Prediction:
                = (type == "Regression") ? "#{'%.2e' % prediction[:value]} (#{@models[i].unit}) | #{'%.2e' % @compound.mmol_to_mg(prediction[:value])} (mg/kg_bw/day)" : prediction[:value]
                / TODO update description
                / %a.btn.glyphicon.glyphicon-info-sign{:href=>"#", :title=>"Prediction", data: {toggle:"popover", placement:"left", html:"true", content:"LAZAR calculates searches the training dataset for similar compounds (neighbors) and calculates the prediction from their measured activities. LAZAR calculates predictions using <ul><li>a majority vote (weighted by compound similarity) for<br /><b>classification</b> (<a href='http://www.frontiersin.org/Journal/10.3389/fphar.2013.00038/abstract', target='_blank'>original publication</a>) </li><li>a local QSAR model based on neighbors for<br /><b>regression</b> (<a href='http://www.frontiersin.org/Journal/10.3389/fphar.2013.00038/abstract', target='_blank'</h>original publication</a>) </li></ul>Please keep in mind that predictions are based on the measured activities of neighbors."}}
                %br
                / TODO probability
                - if type == "Regression"
                  %b 95% Prediction interval:
                  - interval = prediction[:prediction_interval].collect{|i| i.round(2)}
                  = interval
                - else
                  %b Confidence:
                  = prediction[:confidence].round(2) unless prediction[:confidence].nil?
                / %a.btn.glyphicon.glyphicon-info-sign{:href=>"#", :title=>"Confidence", data: {toggle:"popover", placement:"left", html:"true", content:"Indicates the applicability domain of a model. Predictions with a high confidence can be expected to be more reliable than predictions with low confidence. Confidence values may take any value between 0 and 1. For most models confidence > 0.025 is a sensible (hard) cutoff to distinguish between reliable and unreliable predictions."}}
                %p
                /TODO add tooltip for significant ftagments and descriptors
                / - if @model_type[i] =~ /classification/i && (p.data_entries[0][1] != nil && p.data_entries[0][1] != 0.0)
                / Significant fragments:
                / %a.btn.btn-default.btn-sm{:id=>"linkSigFragments", :href => "#detailsTop", data: { toggle: "modal", remote: to("/prediction/#{CGI.escape(@model_uri)}/#{@model_type[i]}/#{CGI.escape(@compound.uri)}/fingerprints")}} Significant fragments
                / - if @model_type[i] =~ /regression/i && (p.data_entries[0][1] != nil && p.data_entries[0][1] != 0.0)
                / Descriptors
                / %a.btn.btn-default.btn-sm{:id=>"linkDescriptors", :href => "#detailsTop", data: { toggle: "modal", remote: to("/prediction/#{CGI.escape(@model_uri)}/#{@model_type[i]}/#{CGI.escape(@compound.uri)}/fingerprints")}} Descriptors
                / %p
                %p
              - else
                - @dbhit[i] = false
                %p
                  = "Not enough similar compounds </br>in training dataset."

  / always show the neighbors table, message is given there  
  = haml :neighbors, :layout => false, :model_type => @model_types, :dbhit => @dbhit

